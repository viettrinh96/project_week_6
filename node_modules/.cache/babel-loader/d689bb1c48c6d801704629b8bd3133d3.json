{"ast":null,"code":"import * as types from \"../constants/blog.constants\";\nimport api from \"../../apiService\";\nimport { toast } from \"react-toastify\"; // the middleware functions will be here\n\nconst blogsRequest = () => async dispatch => {\n  dispatch({\n    type: types.GET_BLOGS_REQUEST,\n    payload: null\n  });\n\n  try {\n    const res = await api.get(\"api/blog\");\n    dispatch({\n      type: types.GET_BLOGS_SUCCESS,\n      payload: res.data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.GET_BLOGS_FAILURE,\n      payload: null\n    });\n  }\n};\n\nconst blogActions = {\n  blogsRequest\n};\nexport default blogActions;","map":{"version":3,"sources":["/Users/viettrinh/Documents/Coderschool/week6_project/social-blog/src/redux/actions/blog.actions.js"],"names":["types","api","toast","blogsRequest","dispatch","type","GET_BLOGS_REQUEST","payload","res","get","GET_BLOGS_SUCCESS","data","error","GET_BLOGS_FAILURE","blogActions"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,KAAK,CAACM,iBAAd;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GAAD,CAAR;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,UAAR,CAAlB;AACAL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,KAAK,CAACU,iBAAd;AAAiCH,MAAAA,OAAO,EAAEC,GAAG,CAACG,IAAJ,CAASA;AAAnD,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,KAAK,CAACa,iBAAd;AAAiCN,MAAAA,OAAO,EAAE;AAA1C,KAAD,CAAR;AACD;AACF,CARD;;AASA,MAAMO,WAAW,GAAG;AAAEX,EAAAA;AAAF,CAApB;AACA,eAAeW,WAAf","sourcesContent":["import * as types from \"../constants/blog.constants\";\nimport api from \"../../apiService\";\nimport { toast } from \"react-toastify\";\n// the middleware functions will be here\n\nconst blogsRequest = () => async (dispatch) => {\n  dispatch({ type: types.GET_BLOGS_REQUEST, payload: null });\n  try {\n    const res = await api.get(\"api/blog\");\n    dispatch({ type: types.GET_BLOGS_SUCCESS, payload: res.data.data });\n  } catch (error) {\n    dispatch({ type: types.GET_BLOGS_FAILURE, payload: null });\n  }\n};\nconst blogActions = { blogsRequest };\nexport default blogActions;\n"]},"metadata":{},"sourceType":"module"}